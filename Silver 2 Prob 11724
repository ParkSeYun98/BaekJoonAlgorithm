import java.util.*;
import java.io.*;

public class Main {
	public static int graph[][];
	public static int N;
	public static int M;
	
	public static boolean visited[];
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		
		graph = new int[N+1][N+1];
		
		for(int i=0; i<M; i++) {
			st = new StringTokenizer(br.readLine());
			
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			
			graph[a][b] = 1;
			graph[b][a] = 1;
		}
		
		visited = new boolean[N+1];
		
		int count = 0;
		
		for(int i=1; i<N+1; i++) {
			if(!visited[i]) {
				DFS(i);
				count++;
			}
		}
		
		System.out.println(count);
	}
	
	public static void DFS(int start) {
		visited[start] = true;
		
		for(int i=1; i<=N; i++) {
			if(graph[start][i] == 1 && !visited[i])
				DFS(i);
		}
	}
}
