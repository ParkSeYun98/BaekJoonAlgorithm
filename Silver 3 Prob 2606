import java.util.*;
import java.io.*;

public class Main {
	public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int N = Integer.parseInt(br.readLine());
        int M = Integer.parseInt(br.readLine());

        int arr[][] = new int[N + 1][N + 1];
        for (int i = 0; i < M; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());
            int origin = Integer.parseInt(st.nextToken());
            int destination = Integer.parseInt(st.nextToken());
            arr[origin][destination] = arr[destination][origin] = 1; // 두 노드가 서로 연결되어 있다는 뜻
        }

        Queue<Integer> queue = new LinkedList<>();
        boolean[] visit = new boolean[N + 1];

        queue.add(1); // 1이 바이러스에 감염된 것을 베이스로 하기 때문
        visit[1] = true; // 1이 바이러스에 감염된 것을 베이스로 하기 때문

        int computer = 0;
        
        while (!queue.isEmpty()) {
            int temp = queue.poll();
            for (int i = 1; i <= N; i++) {
                if (arr[temp][i] == 1 && !visit[i]) {
                    visit[i] = true;
                    queue.add(i);
                    computer++;
                }
            }
        }
        
        System.out.println(computer);
    }
}
