import java.util.*;
import java.io.*;

public class Main {
	public static int board[][];
	public static int minus = 0;
	public static int zero = 0;
	public static int plus = 0;
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		int N = Integer.parseInt(br.readLine());
		board = new int[N][N];
		
		for(int i=0; i<N; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			
			for(int j=0; j<N; j++)
				board[i][j] = Integer.parseInt(st.nextToken());
		}
		
		split(0, 0, N);
		
		System.out.println(minus);
		System.out.println(zero);
		System.out.println(plus);
	}
	
	public static void split(int row, int col, int size) {
		if(check(row, col, size)) {
			if(board[row][col] == -1)
				minus++;
			else if(board[row][col] == 0)
				zero++;
			else
				plus++;
			
			return;
		}
		
		int temp = size / 3;
		
		split(row, col, temp);
		split(row+temp, col, temp);
		split(row+temp+temp, col, temp);
		split(row, col+temp, temp);
		split(row+temp, col+temp, temp);
		split(row+temp+temp, col+temp, temp);
		split(row, col+temp+temp, temp);
		split(row+temp, col+temp+temp, temp);
		split(row+temp+temp, col+temp+temp, temp);
	}
	
	public static boolean check(int row, int col, int size) {
		int color = board[row][col];
		
		for(int i=row; i<row+size; i++) {
			for(int j=col; j<col+size; j++) {
				if(color != board[i][j])
					return false;
			}
		}
		return true;
	}
}
